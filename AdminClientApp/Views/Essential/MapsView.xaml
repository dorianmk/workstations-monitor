<UserControl x:Class="AdminClientApp.Views.Essential.MapsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:AdminClientApp.Views"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:AdminClientApp.ViewModels.Essential.Maps"
             xmlns:converters="clr-namespace:AdminClientApp.Views.Converters"
             xmlns:local="clr-namespace:AdminClientApp.Views.Essential"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             dialog:DialogParticipation.Register="{Binding}" 
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <UserControl.Resources>
        <views:BindingProxy x:Key="mapsVM" Data="{Binding}"/>
        <converters:IsConnectedToBrushConverter x:Key="IsConnectedToBrushConverter"/>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding DeleteKeyDownCommand}" Key="Delete"/>
    </UserControl.InputBindings>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel>
            <Grid Margin="0 5">
                <Label Content="Edit mode" Style="{StaticResource MetroLabel}" FontSize="16"/>
                <controls:ToggleSwitch Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" OffLabel="Off" OnLabel="On" 
                                   IsChecked="{Binding EditMode}"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5 0"/>
            </Grid>
            <GroupBox Header="Map" MinHeight="350">
                <ListBox controls:ItemHelper.ActiveSelectionForegroundBrush="White" controls:ItemHelper.SelectedForegroundBrush="White"
                 ItemsSource="{Binding Maps}" SelectedItem="{Binding SelectedMap}" DisplayMemberPath="Name"/>
            </GroupBox>            
            <StackPanel Visibility="{Binding EditMode,Converter={StaticResource BooleanToVisibilityConverter}}" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Height="30" Width="30" Margin="5" Command="{Binding AddMapCommand}" BorderThickness="1.5"
                    Content="&#xE948;" FontFamily="Segoe MDL2 Assets" Style="{StaticResource SquareButtonStyle}" />
                <Button Height="30" Width="30" Margin="5" Command="{Binding RemoveMapCommand}" BorderThickness="1.5"
                    Content="&#xE949;" FontFamily="Segoe MDL2 Assets" Style="{StaticResource SquareButtonStyle}" />
            </StackPanel>
            <StackPanel Visibility="{Binding EditMode,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Expander Header="New items" controls:ControlsHelper.ContentCharacterCasing="Normal" IsExpanded="True" Margin="0 10"
                          DataContext="{Binding SelectedMap}" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                    <StackPanel>
                        <Button Height="30" Margin="5" Command="{Binding AddImageCommand}" Content="Image" Style="{StaticResource SquareButtonStyle}"
                                controls:ButtonHelper.PreserveTextCase="True" BorderThickness="1"/>
                        <controls:DropDownButton Height="30" Margin="5" ItemsSource="{Binding Data.Workstations,Source={StaticResource mapsVM}}">
                            <controls:DropDownButton.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding Data.SelectedMap.AddWorkstationCommand,Source={StaticResource mapsVM}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </controls:DropDownButton.ItemContainerStyle>
                            <controls:DropDownButton.Icon >
                                <Label  Content="Workstation" FontWeight="Medium"/>
                            </controls:DropDownButton.Icon>
                        </controls:DropDownButton>
                    </StackPanel>
                </Expander>
                <Expander Header="Selected item properties" controls:ControlsHelper.ContentCharacterCasing="Normal" IsExpanded="True"
                          DataContext="{Binding SelectedMap.SelectedItem}" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Top" Grid.Row="0" Margin="5"/>
                        <Label Content="Left" Grid.Row="1" Margin="5"/>
                        <Label Content="Width" Grid.Row="2" Margin="5"/>
                        <Label Content="Height" Grid.Row="3" Margin="5"/>
                        <Label Content="Layer" Grid.Row="4" Margin="5"/>
                        <controls:NumericUpDown Value="{Binding Top}" Grid.Row="0" Grid.Column="1" Minimum="0" Margin="5"/>
                        <controls:NumericUpDown Value="{Binding Left}" Grid.Row="1" Grid.Column="1" Minimum="0" Margin="5"/>
                        <controls:NumericUpDown Value="{Binding Width}" Grid.Row="2" Grid.Column="1" Minimum="1" Margin="5"/>
                        <controls:NumericUpDown Value="{Binding Height}" Grid.Row="3" Grid.Column="1" Minimum="1" Margin="5"/>
                        <controls:NumericUpDown Value="{Binding Layer}" Grid.Row="4" Grid.Column="1" Margin="5"/>
                    </Grid>
                </Expander>                
            </StackPanel>                      
        </StackPanel>

        <Border Grid.Column="2" Background="WhiteSmoke" Visibility="{Binding EditMode,Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <ItemsControl ItemsSource="{Binding SelectedMap.Items}" Grid.Column="2">
                <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Cursor="{Binding Cursor}">                        
                        <ContentControl Content="{Binding}" />
                        <Border  BorderBrush="Gray" BorderThickness="1" Visibility="{Binding EditMode,Converter={StaticResource BooleanToVisibilityConverter}}" Background="Transparent"/>
                        <Border  BorderBrush="Red" BorderThickness="2" Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}" Background="Transparent"/>
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown" >
                                <behaviors:InvokeCommandAction Command="{Binding MoveBehaviour.MouseDownCommand}" PassEventArgsToCommand="True" IsEnabled="{Binding EditMode}"/>
                                <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}" IsEnabled="{Binding EditMode}"/>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="MouseMove">
                                <behaviors:InvokeCommandAction Command="{Binding MoveBehaviour.MouseMoveCommand}" PassEventArgsToCommand="True" IsEnabled="{Binding EditMode}"/>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="MouseLeftButtonUp">
                                <behaviors:InvokeCommandAction Command="{Binding MoveBehaviour.MouseUpCommand}" IsEnabled="{Binding EditMode}"/>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="MouseEnter">
                                <behaviors:InvokeCommandAction Command="{Binding MoveBehaviour.MouseEnterCommand}" IsEnabled="{Binding EditMode}"/>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="MouseLeave">
                                <behaviors:InvokeCommandAction Command="{Binding MoveBehaviour.MouseLeaveCommand}" IsEnabled="{Binding EditMode}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Canvas.Left" Value="{Binding Path=Left}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Path=Top}"/>
                    <Setter Property="Canvas.Width" Value="{Binding Path=Width}"/>
                    <Setter Property="Canvas.Height" Value="{Binding Path=Height}"/>
                    <Setter Property="Canvas.ZIndex" Value="{Binding Path=Layer}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type vm:ImageItem}" >
                    <Image Source="{Binding ImageSource}" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:WorkstationItem}" >
                    <Viewbox DataContext="{Binding Workstation}">
                        <TextBlock Text="&#xE977;" FontFamily="Segoe MDL2 Assets" ToolTipService.ShowDuration="120000"
                                   Foreground="{Binding IsConnected,Converter={StaticResource IsConnectedToBrushConverter}}">
                            <TextBlock.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.CPU,StringFormat=CPU {0:N1} %}"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.Memory,StringFormat=Memory {0:N0} MB}"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.TcpSent,StringFormat=TcpSent {0} B}"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.TcpReceived,StringFormat=TcpReceived {0} B}"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.DiskIORead,StringFormat=DiskIORead {0} B}"/>
                                    <TextBlock Text="{Binding PerformanceViewModel.DiskIOWrite,StringFormat=DiskIOWrite {0} B}"/>
                                </StackPanel>
                            </TextBlock.ToolTip>
                        </TextBlock>                           
                    </Viewbox>
                </DataTemplate>
            </ItemsControl.Resources>
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="SizeChanged" >
                    <behaviors:InvokeCommandAction Command="{Binding SizeChangedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="Loaded" >
                    <behaviors:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </ItemsControl>

    </Grid>
</UserControl>
